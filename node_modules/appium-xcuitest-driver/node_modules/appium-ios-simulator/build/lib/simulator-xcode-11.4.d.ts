export default SimulatorXcode11_4;
declare class SimulatorXcode11_4 extends SimulatorXcode11 {
    /**
     * Sets UI appearance style.
     * This function can only be called on a booted simulator.
     *
     * @since Xcode SDK 11.4
     * @param {string} value one of possible appearance values:
     * - dark: to switch to the Dark mode
     * - light: to switch to the Light mode
     */
    setAppearance(value: string): Promise<void>;
    /**
     * Gets the current UI appearance style
     * This function can only be called on a booted simulator.
     *
     * @since Xcode SDK 11.4
     * @returns {Promise<string>} the current UI appearance style.
     * Possible values are:
     * - dark: to switch to the Dark mode
     * - light: to switch to the Light mode
     */
    getAppearance(): Promise<string>;
    /**
     * @typedef {Object} CertificateOptions
     * @property {boolean} isRoot [true] - Whether to install the given
     * certificate into the Trusted Root store (`true`) or to the keychain
     * (`false`)
     */
    /**
     * Adds the given certificate to the booted simulator.
     * The simulator could be in both running and shutdown states
     * in order for this method to run as expected.
     *
     * @param {string} payload the content of the PEM certificate
     * @param {Partial<CertificateOptions>} opts
     */
    addCertificate(payload: string, opts?: Partial<{
        /**
         * [true] - Whether to install the given
         * certificate into the Trusted Root store (`true`) or to the keychain
         * (`false`)
         */
        isRoot: boolean;
    }>): Promise<boolean>;
    /**
     * Simulates push notification delivery to the booted simulator
     *
     * @since Xcode SDK 11.4
     * @param {Object} payload - The object that describes Apple push notification content.
     * It must contain a top-level "Simulator Target Bundle" key with a string value matching
     * the target applicationâ€˜s bundle identifier and "aps" key with valid Apple Push Notification values.
     * For example:
     * {
     *   "Simulator Target Bundle": "com.apple.Preferences",
     *   "aps": {
     *     "alert": "This is a simulated notification!",
     *     "badge": 3,
     *     "sound": "default"
     *   }
     * }
     */
    pushNotification(payload: any): Promise<void>;
    /**
     */
    clearKeychains(): Promise<void>;
    /**
     * @inheritdoc
     * @override
     * */
    override launchWindow(isUiClientRunning: any, opts: any): Promise<void>;
    /**
     * @inheritdoc
     * @override
     */
    override ps(): Promise<{
        pid: number;
        group: any;
        name: any;
    }[]>;
}
import SimulatorXcode11 from './simulator-xcode-11';
//# sourceMappingURL=simulator-xcode-11.4.d.ts.map